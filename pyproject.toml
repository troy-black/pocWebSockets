[project]
name = "FastAPI-Websockets"
version = "0.0.1"
description = "FastAPI Websockets Template"
authors = [
    { name = "Troy Black", email = "troydblack@gmail.com>" },
]


license = "LICENSE"
readme = "README.md"
requires-python = "==3.12.*"

dependencies = [
    # Server
    "fastapi[standard]>=0.115.6",
    "pydantic[email]>=2.10.4",
    "pydantic-settings>=2.7.1",
    "sqlmodel>=0.0.22",
    "uvicorn>=0.34.0",
    "asyncpg>=0.30.0",
    "SQLAlchemy>=2.0.36",
    "python-dotenv>=1.0.1",
    "alembic>=1.14.0",
    "uuid-utils>=0.10.0",
    "email-validator>=2.2.0",
    "pyjwt>=2.10.1",
    "bcrypt>=4.2.1",
    "passlib>=1.7.4",
    # Client
    "aiohttp>=3.11.11"
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.14.1",
    "ruff>=0.8.6",
    "ruff-lsp>=0.0.59",
    "types-passlib>=1.7.7.20241221"
]
cache-dir = "./.uv_cache"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".uv_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4

target-version = "py312"
cache-dir = "./.ruff_cache"

[tool.ruff.lint]
select = [
    "ALL", # include all the rules, including new ones
]
ignore = [
    "COM812", # missing-trailing-comma

    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public clas
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in `__init__`

    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line

    "ISC001", # single-line-implicit-string-concatenation

    "PLR0913", # Too many arguments in function definition (n > 5)

    "Q000", # Single quotes found but double quotes preferred

    "S106", # Possible hardcoded password assigned
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "PLR0915", # Too many statements (n > 50)
    "PLR2004", # Magic value used in comparison, consider replacing `n` with a constant variable
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
strict = true
cache_dir = "./.mypy_cache"
mypy_path = "./tdb"